name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    env:
      SCW_NAMESPACE_ID: ${{ secrets.SCW_NAMESPACE_ID }}
      BACKEND_CONTAINER_NAME: ${{ secrets.SCW_CONTAINER_NAME }}
      BACKEND_IMAGE_NAME: ${{ secrets.SCW_BACKEND_IMAGE_NAME }}
      IMAGE_TAG: ${{ github.sha }}
      VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Scaleway CLI
        uses: scaleway/action-scw@v0
        with:
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          default-organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
          default-project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          save-config: true
          export-config: true

      - name: Docker metadata
        uses: docker/setup-buildx-action@v3

      - name: Make build
        run: make build

      - name: Make test
        run: make test

      - name: Make deploy
        if: github.ref == 'refs/heads/main'
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        run: make deploy

      - name: Upload GitHub Pages artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  deploy-pages:
    needs: build-test-deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
